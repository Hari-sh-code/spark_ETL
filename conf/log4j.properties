# ========================================
# LOG4J CONFIGURATION FOR SPARK PROJECTS
# ========================================

# Root logger - logs everything WARN and above to the console
log4j.rootCategory=WARN, console

# ---------------------------
# Console Appender
# ---------------------------
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.target=System.out
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} [%p] %c{1}: %m%n

# ---------------------------
# Application Logger
# ---------------------------
# Define a custom logger for your application code
log4j.logger.tyler.spark.firecalls=INFO, console, file
log4j.additivity.tyler.spark.firecalls=false

# --------------------------    -
# File Appender
# ---------------------------
log4j.appender.file=org.apache.log4j.RollingFileAppender
# Spark/YARN will replace this path dynamically in cluster mode
# For local mode, you can use an absolute path like /tmp/firecalls.log
log4j.appender.file.File=app_log/app.log

log4j.appender.file.ImmediateFlush=true
log4j.appender.file.Append=false
log4j.appender.file.MaxFileSize=500MB
log4j.appender.file.MaxBackupIndex=2
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} [%p] %c{1}: %m%n

# ---------------------------
# Spark Internal Logging (reduce noise)
# ---------------------------
log4j.logger.org.apache.spark=WARN
log4j.logger.org.spark_project.jetty=WARN
log4j.logger.org.spark_project.jetty.util.component.AbstractLifeCycle=ERROR
log4j.logger.org.apache.spark.repl.Main=WARN
log4j.logger.org.apache.spark.repl.SparkMain$exprTyper=INFO
log4j.logger.org.apache.spark.repl.SparkLoop$SparkLoopInterpreter=INFO
